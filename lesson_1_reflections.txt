How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It created line by line, pin pointed the bug, which is easier and faster for complex files with large content and many errors.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    To understand and get a good hold of how the code/file developed from scratch. Tracking changes and establishing version control would give a better understanding of how the programme evolved and what it looks like in different scenarios of versions. It also helps in easy updation and saves time. It helps in restoring previous saved version in case the final output is not the desired output.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros are the ability and control for deciding when to create a commit after a clear logical change. In Git, it allows to add Commmit message as well to define the changes/update for that commit. Cons are to consciously keep a track of commit and to create commit when it is important unlike the automatic version saves which Google docs does.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    For the very reason that for code based programmes where the multiple files are inter-dependent (HTML/CSS), it makes more sense to save versions of the interconnected files in the Git repository all at once in one commit. Where for Google Docs, where the files are not code based or interconnected saving versions of  multiple files makes sense.

How can you use the commands git log and git diff to view the history of files?

    

How might using version control make you more confident to make changes that
could break something?

    Easy traction and recording of different version prevents loss of data and gives more freedom to make changes to enhance the ultimate output.

Now that you have your workspace set up, what do you want to try using Git for?

    Version Control, automatic updation



